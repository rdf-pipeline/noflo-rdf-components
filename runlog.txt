Reading graph from /home/dbooth/rdf-pipeline/noflo/noflo-rdf-components/output.json
NoFlo runtime 0.5 listening at ws://localhost:3005
NoFlo UI is available at http://localhost:3005/
Using /home/dbooth/rdf-pipeline/noflo/noflo-server for noflo-ui
Default permissions are protocol:component, protocol:runtime, protocol:graph, protocol:network, component:getsource, component:setsource
receiveEvent sum1|in1 ignoring non-data event: connect
############### receiveEvent BEGIN ###############
receiveEvent sum1|in1 event: data
receiveEvent processing data event.  Payload:  3
######
 ... IIP event 
ensureVniExists created sum1 node.vnis['']:
receiveEvent stored state: { data: '3',
  lm: 'LM1452084168992.000000001',
  previousLms: null,
  selfPort: null }
receiveEvent sum1 vnis[''] is now:
---------------- BEGIN dumpVni: sum1 ----------------
vnid: ''
inputs:  { in1: 
   [ data0: { data: '3',
       lm: 'LM1452084168992.000000001',
       previousLms: null,
       selfPort: null } ],
  in2: [ data0: null ] }
states: 
  out: 
    data: undefined
    lm: undefined
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum1|out
  error: 
    data: undefined
    lm: undefined
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum1|error
selfNode: sum1
---------------- END dumpVni: sum1 ----------------
=============== maybeFireUpdater starting ===============
maybeFireUpdater nodeId:  sum1
maybeFireUpdater UNFINISHED
=============== maybeFireUpdater returning ===============
=============== maybeSendEvent starting ===============
maybeSendEvent nodeId:  sum1
=====
maybeSendEvent calling forwardData ....
forwardData Forwarding data to port: out
forwardData Connect ...
receiveEvent sum2|in1 ignoring non-data event: connect
forwardData Send ...
############### receiveEvent BEGIN ###############
receiveEvent sum2|in1 event: data
receiveEvent processing data event.  Payload:  { vnid: '',
  state: 
   { data: 'Forwarded data: 3',
     lm: 'LM1452084168995.000000000',
     previousLms: { in1: [Object], in2: [Object] },
     selfPort: 
      { cache: {},
        options: [Object],
        sockets: [Object],
        node: 'sum1',
        name: 'out',
        nodeInstance: [Object],
        _events: {} } } }
######
 ... event from a node
forwardData Disconnect ...
receiveEvent sum2|in1 ignoring non-data event: disconnect
forwardData Done
maybeSendEvent UNFINISHED
=============== maybeSendEvent returning ===============
############### receiveEvent END ###############
receiveEvent sum1|in1 ignoring non-data event: disconnect
receiveEvent sum1|in2 ignoring non-data event: connect
############### receiveEvent BEGIN ###############
receiveEvent sum1|in2 event: data
receiveEvent processing data event.  Payload:  4
######
 ... IIP event 
receiveEvent stored state: { data: '4',
  lm: 'LM1452084168998.000000000',
  previousLms: null,
  selfPort: null }
receiveEvent sum1 vnis[''] is now:
---------------- BEGIN dumpVni: sum1 ----------------
vnid: ''
inputs:  { in1: 
   [ data0: { data: '3',
       lm: 'LM1452084168992.000000001',
       previousLms: null,
       selfPort: null } ],
  in2: 
   [ data0: { data: '4',
       lm: 'LM1452084168998.000000000',
       previousLms: null,
       selfPort: null } ] }
states: 
  out: 
    data: 'Forwarded data: 3'
    lm: 'LM1452084168995.000000000'
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum1|out
  error: 
    data: undefined
    lm: undefined
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum1|error
selfNode: sum1
---------------- END dumpVni: sum1 ----------------
=============== maybeFireUpdater starting ===============
maybeFireUpdater nodeId:  sum1
maybeFireUpdater UNFINISHED
=============== maybeFireUpdater returning ===============
=============== maybeSendEvent starting ===============
maybeSendEvent nodeId:  sum1
=====
maybeSendEvent calling forwardData ....
forwardData Forwarding data to port: out
forwardData Connect ...
receiveEvent sum2|in1 ignoring non-data event: connect
forwardData Send ...
############### receiveEvent BEGIN ###############
receiveEvent sum2|in1 event: data
receiveEvent processing data event.  Payload:  { vnid: '',
  state: 
   { data: 'Forwarded data: 4',
     lm: 'LM1452084168998.000000001',
     previousLms: { in1: [Object], in2: [Object] },
     selfPort: 
      { cache: {},
        options: [Object],
        sockets: [Object],
        node: 'sum1',
        name: 'out',
        nodeInstance: [Object],
        _events: {} } } }
######
 ... event from a node
forwardData Disconnect ...
receiveEvent sum2|in1 ignoring non-data event: disconnect
forwardData Done
maybeSendEvent UNFINISHED
=============== maybeSendEvent returning ===============
############### receiveEvent END ###############
receiveEvent sum1|in2 ignoring non-data event: disconnect
receiveEvent sum3|in1 ignoring non-data event: connect
############### receiveEvent BEGIN ###############
receiveEvent sum3|in1 event: data
receiveEvent processing data event.  Payload:  5
######
 ... IIP event 
ensureVniExists created sum3 node.vnis['']:
receiveEvent stored state: { data: '5',
  lm: 'LM1452084169000.000000000',
  previousLms: null,
  selfPort: null }
receiveEvent sum3 vnis[''] is now:
---------------- BEGIN dumpVni: sum3 ----------------
vnid: ''
inputs:  { in1: 
   [ data0: { data: '5',
       lm: 'LM1452084169000.000000000',
       previousLms: null,
       selfPort: null } ],
  in2: [ data0: null ] }
states: 
  out: 
    data: undefined
    lm: undefined
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum3|out
  error: 
    data: undefined
    lm: undefined
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum3|error
selfNode: sum3
---------------- END dumpVni: sum3 ----------------
=============== maybeFireUpdater starting ===============
maybeFireUpdater nodeId:  sum3
maybeFireUpdater UNFINISHED
=============== maybeFireUpdater returning ===============
=============== maybeSendEvent starting ===============
maybeSendEvent nodeId:  sum3
=====
maybeSendEvent calling forwardData ....
forwardData Forwarding data to port: out
forwardData Connect ...
receiveEvent sum2|in1 ignoring non-data event: connect
forwardData Send ...
############### receiveEvent BEGIN ###############
receiveEvent sum2|in1 event: data
receiveEvent processing data event.  Payload:  { vnid: '',
  state: 
   { data: 'Forwarded data: 5',
     lm: 'LM1452084169001.000000000',
     previousLms: { in1: [Object], in2: [Object] },
     selfPort: 
      { cache: {},
        options: [Object],
        sockets: [Object],
        node: 'sum3',
        name: 'out',
        nodeInstance: [Object],
        _events: {} } } }
######
 ... event from a node
forwardData Disconnect ...
receiveEvent sum2|in1 ignoring non-data event: disconnect
forwardData Done
maybeSendEvent UNFINISHED
=============== maybeSendEvent returning ===============
############### receiveEvent END ###############
receiveEvent sum3|in1 ignoring non-data event: disconnect
receiveEvent sum3|in2 ignoring non-data event: connect
############### receiveEvent BEGIN ###############
receiveEvent sum3|in2 event: data
receiveEvent processing data event.  Payload:  6
######
 ... IIP event 
receiveEvent stored state: { data: '6',
  lm: 'LM1452084169002.000000000',
  previousLms: null,
  selfPort: null }
receiveEvent sum3 vnis[''] is now:
---------------- BEGIN dumpVni: sum3 ----------------
vnid: ''
inputs:  { in1: 
   [ data0: { data: '5',
       lm: 'LM1452084169000.000000000',
       previousLms: null,
       selfPort: null } ],
  in2: 
   [ data0: { data: '6',
       lm: 'LM1452084169002.000000000',
       previousLms: null,
       selfPort: null } ] }
states: 
  out: 
    data: 'Forwarded data: 5'
    lm: 'LM1452084169001.000000000'
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum3|out
  error: 
    data: undefined
    lm: undefined
    previousLms: { in1: { data0: undefined }, in2: { data0: undefined } }
    selfPort: sum3|error
selfNode: sum3
---------------- END dumpVni: sum3 ----------------
=============== maybeFireUpdater starting ===============
maybeFireUpdater nodeId:  sum3
maybeFireUpdater UNFINISHED
=============== maybeFireUpdater returning ===============
=============== maybeSendEvent starting ===============
maybeSendEvent nodeId:  sum3
=====
maybeSendEvent calling forwardData ....
forwardData Forwarding data to port: out
forwardData Connect ...
receiveEvent sum2|in1 ignoring non-data event: connect
forwardData Send ...
############### receiveEvent BEGIN ###############
receiveEvent sum2|in1 event: data
receiveEvent processing data event.  Payload:  { vnid: '',
  state: 
   { data: 'Forwarded data: 6',
     lm: 'LM1452084169003.000000000',
     previousLms: { in1: [Object], in2: [Object] },
     selfPort: 
      { cache: {},
        options: [Object],
        sockets: [Object],
        node: 'sum3',
        name: 'out',
        nodeInstance: [Object],
        _events: {} } } }
######
 ... event from a node
forwardData Disconnect ...
receiveEvent sum2|in1 ignoring non-data event: disconnect
forwardData Done
maybeSendEvent UNFINISHED
=============== maybeSendEvent returning ===============
############### receiveEvent END ###############
receiveEvent sum3|in2 ignoring non-data event: disconnect
receiveEvent sum2|in2 ignoring non-data event: connect
############### receiveEvent BEGIN ###############
receiveEvent sum2|in2 event: data
receiveEvent processing data event.  Payload:  7
######
 ... IIP event 
ensureVniExists created sum2 node.vnis['']:
receiveEvent stored state: { data: '7',
  lm: 'LM1452084169004.000000000',
  previousLms: null,
  selfPort: null }
receiveEvent sum2 vnis[''] is now:
---------------- BEGIN dumpVni: sum2 ----------------
vnid: ''
inputs:  { in1: [ 'sum1|out': null, 'sum3|out': null ],
  in2: 
   [ data0: { data: '7',
       lm: 'LM1452084169004.000000000',
       previousLms: null,
       selfPort: null } ] }
states: 
  out: 
    data: undefined
    lm: undefined
    previousLms: { in1: { 'sum1|out': undefined, 'sum3|out': undefined },
      in2: { data0: undefined } }
    selfPort: sum2|out
  error: 
    data: undefined
    lm: undefined
    previousLms: { in1: { 'sum1|out': undefined, 'sum3|out': undefined },
      in2: { data0: undefined } }
    selfPort: sum2|error
selfNode: sum2
---------------- END dumpVni: sum2 ----------------
=============== maybeFireUpdater starting ===============
maybeFireUpdater nodeId:  sum2
maybeFireUpdater UNFINISHED
=============== maybeFireUpdater returning ===============
=============== maybeSendEvent starting ===============
maybeSendEvent nodeId:  sum2
=====
maybeSendEvent calling forwardData ....
forwardData Forwarding data to port: out
forwardData Connect ...
forwardData Send ...
forwardData Disconnect ...
forwardData Done
maybeSendEvent UNFINISHED
=============== maybeSendEvent returning ===============
############### receiveEvent END ###############
receiveEvent sum2|in2 ignoring non-data event: disconnect
Saving graph /home/dbooth/rdf-pipeline/noflo/noflo-rdf-components/output.json
