# rdf-construct.fbp

# Retrieves the source-graph (IRI) from the sparql-endpoint and returns an RDF JS Interface Graph object
# The optional inport auth_file_env is an environment variable name that contains a file name, which contains the base64 encoded username:password to be included for HTTP Basic authentication.

# Exports
INPORT=request.URL:SPARQL_ENDPOINT
INPORT=setGraph.VALUE:SOURCE_GRAPH_URI
INPORT=request.AUTH_FILE_ENV:AUTH_FILE_ENV
OUTPORT=rdfLoad.OUTPUT:OUTPUT

# Initial Information Packets (IIP)
'application/sparql-query' -> TYPE request(rdf-components/http-basic-post)
'Accept'  -> KEY setAccept(rdf-components/object)
'text/turtle' -> VALUE setAccept OUTPUT -> HEADERS request
'text/turtle' -> MEDIA rdfLoad(rdf-components/rdf-load)
'sparql/construct-graph.rq.hbs' -> FILENAME rq(rdf-components/read-content) OUTPUT -> BODY request

# Use graph as a sparql update parameter in the request body and parse the result
'graph-uri' -> KEY setGraph(rdf-components/object) OUTPUT -> INPUT request OUTPUT -> INPUT rdfLoad

# Error Handling echos errors to console.log
rq ERROR -> IN error
request ERROR -> IN error
setAccept ERROR -> IN error
error(core/Repeat) OUT -> IN output(core/Output)
